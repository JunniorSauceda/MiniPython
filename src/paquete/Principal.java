/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paquete;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;
import java.awt.font.GraphicAttribute;
import java.awt.image.BufferedImage;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollBar;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;

/**
 *
 * @author Junnior Sauceda
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {

        initComponents();
        this.setLayout(null);

        jPanel1.setVisible(true);
        Pn_UML.setVisible(false);

        Pn_DdF.setVisible(false);
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_font.getModel();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String fontNames[] = ge.getAvailableFontFamilyNames();
        for (int i = 0; i < fontNames.length; i++) {
            modelo.addElement(fontNames[i]);
        }
        cb_font.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JD_UML = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        lb_Heredar = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        lb_GenerarCode = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        cb_font = new javax.swing.JComboBox<>();
        cb_style = new javax.swing.JComboBox<>();
        cb_tamaño = new javax.swing.JComboBox<>();
        bt_cambiarfont = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jpn_UML = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        JD_DdF = new javax.swing.JDialog();
        jPanel15 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jlb_desicion = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jlb_ciclo = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jlb_datos = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        lb_GenerarFlujo = new javax.swing.JLabel();
        jPanel39 = new javax.swing.JPanel();
        lb_proceso = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        jlb_desicion1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jPanel43 = new javax.swing.JPanel();
        jPanel44 = new javax.swing.JPanel();
        jPanel45 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        jPanel47 = new javax.swing.JPanel();
        jPanel48 = new javax.swing.JPanel();
        jPanel49 = new javax.swing.JPanel();
        jPanel50 = new javax.swing.JPanel();
        jPanel51 = new javax.swing.JPanel();
        jPanel52 = new javax.swing.JPanel();
        cb_font2 = new javax.swing.JComboBox<>();
        cb_Style = new javax.swing.JComboBox<>();
        cb_tamaño1 = new javax.swing.JComboBox<>();
        Bt_setfont = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jpn_diagrama = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        JD_Codigo = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MostarCodigo = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        JD_herencia = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cb_padre = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        tf_nomhijo = new javax.swing.JTextField();
        pn_crearHija = new javax.swing.JPanel();
        lb_tenerHija = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pn_salir = new javax.swing.JPanel();
        lb_salir = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lb_UML = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Pn_DdF = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        pn_creardiag = new javax.swing.JPanel();
        lb_creardiag = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        pn_creardiag1 = new javax.swing.JPanel();
        lb_creardiag1 = new javax.swing.JLabel();
        Pn_UML = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        pn_crearuml = new javax.swing.JPanel();
        lb_crearuml = new javax.swing.JLabel();
        pn_crearuml1 = new javax.swing.JPanel();
        lb_crearuml1 = new javax.swing.JLabel();

        JD_UML.setTitle("Crear Diagrama de UML");
        JD_UML.setResizable(false);

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel19.setBackground(new java.awt.Color(0, 51, 51));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Agregar Clase");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel20jPanel11MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Clase Abstracta");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7jPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));
        jPanel30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel30jPanel11MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Interfaz");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8jPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));
        jPanel35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel35jPanel11MouseClicked(evt);
            }
        });

        lb_Heredar.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lb_Heredar.setForeground(new java.awt.Color(0, 0, 0));
        lb_Heredar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Heredar.setText("Herencia");
        lb_Heredar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_HeredarjPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_Heredar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_Heredar, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
        );

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));
        jPanel36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel36jPanel11MouseClicked(evt);
            }
        });

        lb_GenerarCode.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lb_GenerarCode.setForeground(new java.awt.Color(0, 0, 0));
        lb_GenerarCode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_GenerarCode.setText("Generar Codigo");
        lb_GenerarCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_GenerarCodejPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_GenerarCode, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_GenerarCode, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 190, 610));

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));

        jPanel17.setBackground(java.awt.Color.gray);
        jPanel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel17MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel8.setBackground(java.awt.Color.lightGray);
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel9.setBackground(java.awt.Color.darkGray);
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel21.setBackground(java.awt.Color.black);
        jPanel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel21MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel22.setBackground(java.awt.Color.red);
        jPanel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel22MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel23.setBackground(java.awt.Color.pink);
        jPanel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel23MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel24.setBackground(java.awt.Color.orange);
        jPanel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel24MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel25.setBackground(java.awt.Color.yellow);
        jPanel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel25MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel26.setBackground(java.awt.Color.green);
        jPanel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel26MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel27.setBackground(java.awt.Color.magenta);
        jPanel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel27MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel28.setBackground(java.awt.Color.cyan);
        jPanel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel28MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel29.setBackground(java.awt.Color.blue);
        jPanel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel29MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        cb_font.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_fontItemStateChanged(evt);
            }
        });

        cb_style.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Bold ", "Italic", "Subrayado" }));
        cb_style.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_styleItemStateChanged(evt);
            }
        });

        cb_tamaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "10", "12", "14" }));
        cb_tamaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tamañoActionPerformed(evt);
            }
        });

        bt_cambiarfont.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bt_cambiarfont.setText("Cambiar Fuente");
        bt_cambiarfont.setBorder(null);
        bt_cambiarfont.setFocusable(false);
        bt_cambiarfont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_cambiarfontMouseClicked(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(51, 51, 51));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/letra.png"))); // NOI18N
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .addComponent(bt_cambiarfont)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cb_tamaño, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cb_style, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cb_font, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel11)
                .addGap(34, 34, 34)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(bt_cambiarfont, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cb_font, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cb_style, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cb_tamaño, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel11)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 100));

        jpn_UML.setBackground(new java.awt.Color(255, 255, 255));
        jpn_UML.setPreferredSize(new java.awt.Dimension(855, 1000));

        javax.swing.GroupLayout jpn_UMLLayout = new javax.swing.GroupLayout(jpn_UML);
        jpn_UML.setLayout(jpn_UMLLayout);
        jpn_UMLLayout.setHorizontalGroup(
            jpn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 928, Short.MAX_VALUE)
        );
        jpn_UMLLayout.setVerticalGroup(
            jpn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jpn_UML);

        jPanel6.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 940, 610));

        jMenu1.setText("File");

        jMenu6.setText("Guardar Como...");

        jMenuItem5.setText("Guardar como JPG");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem5);

        jMenuItem6.setText("Guardar como PDF");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem6);

        jMenu1.add(jMenu6);

        jMenuItem7.setText("Guardar Binarios");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setText("Imprimir UML");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem10.setText("Abrir UML");
        jMenuItem10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem10MouseClicked(evt);
            }
        });
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        JD_UML.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout JD_UMLLayout = new javax.swing.GroupLayout(JD_UML.getContentPane());
        JD_UML.getContentPane().setLayout(JD_UMLLayout);
        JD_UMLLayout.setHorizontalGroup(
            JD_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        JD_UMLLayout.setVerticalGroup(
            JD_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        JD_DdF.setTitle("Crear Diagrama de Flujo");

        jPanel15.setBackground(new java.awt.Color(0, 102, 102));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel31.setBackground(new java.awt.Color(0, 51, 51));

        jPanel32.setBackground(new java.awt.Color(255, 255, 255));
        jPanel32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel32jPanel11MouseClicked(evt);
            }
        });

        jlb_desicion.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlb_desicion.setForeground(new java.awt.Color(0, 0, 0));
        jlb_desicion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlb_desicion.setText("Decision");
        jlb_desicion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlb_desicion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlb_desicionjPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_desicion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_desicion, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));
        jPanel33.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel33jPanel11MouseClicked(evt);
            }
        });

        jlb_ciclo.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlb_ciclo.setForeground(new java.awt.Color(0, 0, 0));
        jlb_ciclo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlb_ciclo.setText("Ciclo");
        jlb_ciclo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlb_ciclo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlb_ciclojPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_ciclo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_ciclo, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));
        jPanel34.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel34jPanel11MouseClicked(evt);
            }
        });

        jlb_datos.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlb_datos.setForeground(new java.awt.Color(0, 0, 0));
        jlb_datos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlb_datos.setText("Datos");
        jlb_datos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlb_datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlb_datosjPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_datos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_datos, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel38.setBackground(new java.awt.Color(255, 255, 255));
        jPanel38.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel38jPanel11MouseClicked(evt);
            }
        });

        lb_GenerarFlujo.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lb_GenerarFlujo.setForeground(new java.awt.Color(0, 0, 0));
        lb_GenerarFlujo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_GenerarFlujo.setText("Generar Codigo");
        lb_GenerarFlujo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_GenerarFlujo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_GenerarFlujojPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_GenerarFlujo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_GenerarFlujo, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel39.setBackground(new java.awt.Color(255, 255, 255));
        jPanel39.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel39jPanel11MouseClicked(evt);
            }
        });

        lb_proceso.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lb_proceso.setForeground(new java.awt.Color(0, 0, 0));
        lb_proceso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_proceso.setText("Proceso");
        lb_proceso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_proceso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_procesojPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_proceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_proceso, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel53.setBackground(new java.awt.Color(255, 255, 255));
        jPanel53.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel53jPanel11MouseClicked(evt);
            }
        });

        jlb_desicion1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlb_desicion1.setForeground(new java.awt.Color(0, 0, 0));
        jlb_desicion1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlb_desicion1.setText("Inicio/Fin");
        jlb_desicion1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlb_desicion1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlb_desicion1jPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel53Layout = new javax.swing.GroupLayout(jPanel53);
        jPanel53.setLayout(jPanel53Layout);
        jPanel53Layout.setHorizontalGroup(
            jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_desicion1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel53Layout.setVerticalGroup(
            jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlb_desicion1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("jLabel12");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jPanel15.add(jPanel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 190, 610));

        jPanel40.setBackground(new java.awt.Color(51, 51, 51));

        jPanel41.setBackground(java.awt.Color.gray);
        jPanel41.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel41MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel42.setBackground(java.awt.Color.lightGray);
        jPanel42.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel42MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel43.setBackground(java.awt.Color.darkGray);
        jPanel43.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel43MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel44.setBackground(java.awt.Color.black);
        jPanel44.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel44MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel45.setBackground(java.awt.Color.red);
        jPanel45.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel45MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel46.setBackground(java.awt.Color.pink);
        jPanel46.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel46MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel47.setBackground(java.awt.Color.orange);
        jPanel47.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel47MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel47Layout = new javax.swing.GroupLayout(jPanel47);
        jPanel47.setLayout(jPanel47Layout);
        jPanel47Layout.setHorizontalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel47Layout.setVerticalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel48.setBackground(java.awt.Color.yellow);
        jPanel48.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel48MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel49.setBackground(java.awt.Color.green);
        jPanel49.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel49MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel50.setBackground(java.awt.Color.magenta);
        jPanel50.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel50MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel50Layout = new javax.swing.GroupLayout(jPanel50);
        jPanel50.setLayout(jPanel50Layout);
        jPanel50Layout.setHorizontalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel50Layout.setVerticalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel51.setBackground(java.awt.Color.cyan);
        jPanel51.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel51MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel51Layout = new javax.swing.GroupLayout(jPanel51);
        jPanel51.setLayout(jPanel51Layout);
        jPanel51Layout.setHorizontalGroup(
            jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel51Layout.setVerticalGroup(
            jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel52.setBackground(java.awt.Color.blue);
        jPanel52.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel52.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel52MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel52Layout = new javax.swing.GroupLayout(jPanel52);
        jPanel52.setLayout(jPanel52Layout);
        jPanel52Layout.setHorizontalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel52Layout.setVerticalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        cb_font2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cb_font2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_font2ItemStateChanged(evt);
            }
        });

        cb_Style.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Bold ", "Italic", "Subrayado" }));
        cb_Style.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cb_Style.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_StyleItemStateChanged(evt);
            }
        });

        cb_tamaño1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "10", "12", "14" }));
        cb_tamaño1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cb_tamaño1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tamaño1ActionPerformed(evt);
            }
        });

        Bt_setfont.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Bt_setfont.setText("Guardar Fuente");
        Bt_setfont.setBorder(null);
        Bt_setfont.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Bt_setfont.setFocusable(false);
        Bt_setfont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Bt_setfontMouseClicked(evt);
            }
        });
        Bt_setfont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt_setfontActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(51, 51, 51));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/letra.png"))); // NOI18N
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .addComponent(Bt_setfont, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cb_tamaño1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cb_Style, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cb_font2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel10)
                .addGap(42, 42, 42)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cb_font2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cb_Style, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cb_tamaño1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel10))
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Bt_setfont, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel15.add(jPanel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 80));

        jpn_diagrama.setBackground(new java.awt.Color(255, 255, 255));
        jpn_diagrama.setPreferredSize(new java.awt.Dimension(855, 1000));

        javax.swing.GroupLayout jpn_diagramaLayout = new javax.swing.GroupLayout(jpn_diagrama);
        jpn_diagrama.setLayout(jpn_diagramaLayout);
        jpn_diagramaLayout.setHorizontalGroup(
            jpn_diagramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 928, Short.MAX_VALUE)
        );
        jpn_diagramaLayout.setVerticalGroup(
            jpn_diagramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jpn_diagrama);

        jPanel15.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 940, 610));

        jMenu3.setText("File");

        jMenu5.setText("Guardar Como...");

        jMenuItem3.setText("Guardar Como JPG");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        jMenuItem4.setText("Guardar como PDF");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem4);

        jMenu3.add(jMenu5);

        jMenuItem1.setText("Guardar Como Binario");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Imprimir Diagrama");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem9.setText("Abrir Diagrama");
        jMenuItem9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem9MouseClicked(evt);
            }
        });
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        JD_DdF.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout JD_DdFLayout = new javax.swing.GroupLayout(JD_DdF.getContentPane());
        JD_DdF.getContentPane().setLayout(JD_DdFLayout);
        JD_DdFLayout.setHorizontalGroup(
            JD_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        JD_DdFLayout.setVerticalGroup(
            JD_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        JD_Codigo.setTitle("Generador de Codigo");

        jPanel11.setBackground(new java.awt.Color(0, 153, 153));

        MostarCodigo.setColumns(20);
        MostarCodigo.setRows(5);
        jScrollPane1.setViewportView(MostarCodigo);

        jPanel14.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout JD_CodigoLayout = new javax.swing.GroupLayout(JD_Codigo.getContentPane());
        JD_Codigo.getContentPane().setLayout(JD_CodigoLayout);
        JD_CodigoLayout.setHorizontalGroup(
            JD_CodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        JD_CodigoLayout.setVerticalGroup(
            JD_CodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        JD_herencia.setTitle("Crear Clase Hija");

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));

        jPanel16.setBackground(new java.awt.Color(0, 153, 153));

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Nombre:");

        jLabel29.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Padre:");

        pn_crearHija.setBackground(java.awt.Color.gray);
        pn_crearHija.setForeground(new java.awt.Color(0, 0, 0));

        lb_tenerHija.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lb_tenerHija.setForeground(new java.awt.Color(0, 0, 0));
        lb_tenerHija.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tenerHija.setText("Crear Hija");
        lb_tenerHija.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_tenerHija.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_tenerHijaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_tenerHijaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_tenerHijaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_crearHijaLayout = new javax.swing.GroupLayout(pn_crearHija);
        pn_crearHija.setLayout(pn_crearHijaLayout);
        pn_crearHijaLayout.setHorizontalGroup(
            pn_crearHijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_tenerHija, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        pn_crearHijaLayout.setVerticalGroup(
            pn_crearHijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_tenerHija, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tf_nomhijo)
                        .addComponent(cb_padre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(pn_crearHija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cb_padre, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_nomhijo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pn_crearHija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout JD_herenciaLayout = new javax.swing.GroupLayout(JD_herencia.getContentPane());
        JD_herencia.getContentPane().setLayout(JD_herenciaLayout);
        JD_herenciaLayout.setHorizontalGroup(
            JD_herenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        JD_herenciaLayout.setVerticalGroup(
            JD_herenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(java.awt.Color.darkGray);

        pn_salir.setBackground(java.awt.Color.darkGray);

        lb_salir.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lb_salir.setForeground(new java.awt.Color(255, 255, 255));
        lb_salir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_salir.setText("X");
        lb_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_salirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_salirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_salirMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_salirLayout = new javax.swing.GroupLayout(pn_salir);
        pn_salir.setLayout(pn_salirLayout);
        pn_salirLayout.setHorizontalGroup(
            pn_salirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_salir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );
        pn_salirLayout.setVerticalGroup(
            pn_salirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Generador De Python");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 826, Short.MAX_VALUE)
                .addComponent(pn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(pn_salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 40));

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel4MouseDragged(evt);
            }
        });
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel4MousePressed(evt);
            }
        });

        lb_UML.setForeground(new java.awt.Color(255, 255, 255));
        lb_UML.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_UML.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/UML.jpg"))); // NOI18N
        lb_UML.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_UML.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_UMLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_UMLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_UMLMouseExited(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Diagama Flujo.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        Pn_DdF.setBackground(new java.awt.Color(0, 153, 153));

        jLabel18.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        jLabel18.setText("Diagrama de Flujo");

        jLabel19.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Un diagrama de flujo es un diagrama que describe un proceso, sistema o algoritmo informático. Se usan ");

        jLabel20.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("ampliamente en numerosos campos para documentar, estudiar, planificar, mejorar  y comunicar procesos");

        jLabel21.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("que suelen ser complejos en diagramas claros y fáciles de comprender.  Los diagramas de flujo emplean");

        jLabel22.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("rectángulos, óvalos, diamantes y otras numerosas figuras para definir el tipo de paso, junto con flechas ");

        jLabel23.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("conectoras que establecen el flujo y la secuencia. ueden variar desde diagramas simples y dibujados a");

        jLabel24.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("mano hasta diagramas exhaustivos creados por computadora que describen múltiples pasos y rutas.");

        pn_creardiag.setBackground(java.awt.Color.lightGray);

        lb_creardiag.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lb_creardiag.setForeground(new java.awt.Color(0, 0, 0));
        lb_creardiag.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_creardiag.setText("Crear un Diagrama de Flujo");
        lb_creardiag.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_creardiag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_creardiagMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_creardiagMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_creardiagMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_creardiagLayout = new javax.swing.GroupLayout(pn_creardiag);
        pn_creardiag.setLayout(pn_creardiagLayout);
        pn_creardiagLayout.setHorizontalGroup(
            pn_creardiagLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_creardiag, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );
        pn_creardiagLayout.setVerticalGroup(
            pn_creardiagLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_creardiag, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/diagrama-flujo-par-impar 1.jpg"))); // NOI18N

        pn_creardiag1.setBackground(java.awt.Color.lightGray);

        lb_creardiag1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lb_creardiag1.setForeground(new java.awt.Color(0, 0, 0));
        lb_creardiag1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_creardiag1.setText("Importar un Diagrama de Flujo");
        lb_creardiag1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_creardiag1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_creardiag1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_creardiag1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_creardiag1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_creardiag1Layout = new javax.swing.GroupLayout(pn_creardiag1);
        pn_creardiag1.setLayout(pn_creardiag1Layout);
        pn_creardiag1Layout.setHorizontalGroup(
            pn_creardiag1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_creardiag1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
        );
        pn_creardiag1Layout.setVerticalGroup(
            pn_creardiag1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_creardiag1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Pn_DdFLayout = new javax.swing.GroupLayout(Pn_DdF);
        Pn_DdF.setLayout(Pn_DdFLayout);
        Pn_DdFLayout.setHorizontalGroup(
            Pn_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn_DdFLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(Pn_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Pn_DdFLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(237, 237, 237))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Pn_DdFLayout.createSequentialGroup()
                        .addGroup(Pn_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Pn_DdFLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Pn_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_creardiag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pn_creardiag1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );
        Pn_DdFLayout.setVerticalGroup(
            Pn_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn_DdFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addGroup(Pn_DdFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pn_DdFLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(Pn_DdFLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(pn_creardiag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pn_creardiag1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
        );

        Pn_UML.setBackground(new java.awt.Color(0, 153, 153));

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        jLabel3.setText("UML");

        jLabel5.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("El Lenguaje Unificado de Modelado (UML) fue creado para forjar un lenguaje de modelado visual común y  ");

        jLabel6.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("semántica y sintácticamente rico para la arquitectura, el diseño y la implementación de sistemas de software  ");

        jLabel13.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("complejos, tanto en estructura como en comportamiento.  UML tiene aplicaciones más allá del desarrollo");

        jLabel14.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("de software, p. ej., en el flujo de procesos en la fabricación. Es comparable a los planos usados en otros");

        jLabel15.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("campos y consiste en diferentes tipos de diagramas. En general, los diagramas UML describen los límites,");

        jLabel16.setFont(new java.awt.Font("Roboto", 2, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("la estructura y el comportamiento del sistema y los objetos que contiene.");

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/UML2.3.png"))); // NOI18N

        pn_crearuml.setBackground(java.awt.Color.lightGray);

        lb_crearuml.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lb_crearuml.setForeground(new java.awt.Color(0, 0, 0));
        lb_crearuml.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_crearuml.setText("Crear un UML");
        lb_crearuml.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_crearuml.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_crearumlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_crearumlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_crearumlMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_crearumlLayout = new javax.swing.GroupLayout(pn_crearuml);
        pn_crearuml.setLayout(pn_crearumlLayout);
        pn_crearumlLayout.setHorizontalGroup(
            pn_crearumlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_crearuml, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );
        pn_crearumlLayout.setVerticalGroup(
            pn_crearumlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_crearuml, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );

        pn_crearuml1.setBackground(java.awt.Color.lightGray);

        lb_crearuml1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lb_crearuml1.setForeground(new java.awt.Color(0, 0, 0));
        lb_crearuml1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_crearuml1.setText("Exportar UML");
        lb_crearuml1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_crearuml1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_crearuml1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_crearuml1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_crearuml1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_crearuml1Layout = new javax.swing.GroupLayout(pn_crearuml1);
        pn_crearuml1.setLayout(pn_crearuml1Layout);
        pn_crearuml1Layout.setHorizontalGroup(
            pn_crearuml1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_crearuml1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
        );
        pn_crearuml1Layout.setVerticalGroup(
            pn_crearuml1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_crearuml1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Pn_UMLLayout = new javax.swing.GroupLayout(Pn_UML);
        Pn_UML.setLayout(Pn_UMLLayout);
        Pn_UMLLayout.setHorizontalGroup(
            Pn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn_UMLLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(Pn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Pn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Pn_UMLLayout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(Pn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pn_crearuml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pn_crearuml1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(Pn_UMLLayout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Pn_UMLLayout.setVerticalGroup(
            Pn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pn_UMLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(43, 43, 43)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(Pn_UMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pn_UMLLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addContainerGap(9, Short.MAX_VALUE))
                    .addGroup(Pn_UMLLayout.createSequentialGroup()
                        .addComponent(pn_crearuml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pn_crearuml1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_UML)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(Pn_UML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(228, 228, 228)
                    .addComponent(Pn_DdF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lb_UML)
                .addGap(68, 68, 68)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(Pn_UML, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Pn_DdF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1120, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lb_salirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_salirMouseEntered
        // TODO add your handling code here:
        pn_salir.setBackground(Color.red);
        lb_salir.setForeground(Color.white);

    }//GEN-LAST:event_lb_salirMouseEntered

    private void lb_salirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_salirMouseExited
        // TODO add your handling code here:
        pn_salir.setBackground(Color.DARK_GRAY);


    }//GEN-LAST:event_lb_salirMouseExited

    private void lb_salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_salirMouseClicked
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_lb_salirMouseClicked

    private void lb_UMLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_UMLMouseEntered
        // TODO add your handling code here:

        lb_UML.setForeground(Color.BLACK);
    }//GEN-LAST:event_lb_UMLMouseEntered

    private void lb_UMLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_UMLMouseExited
        // TODO add your handling code here:

        lb_UML.setForeground(Color.WHITE);
    }//GEN-LAST:event_lb_UMLMouseExited

    private void lb_UMLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_UMLMouseClicked
        // TODO add your handling code here:
        Pn_UML.setVisible(true);
        Pn_DdF.setVisible(false);
    }//GEN-LAST:event_lb_UMLMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
//        JD_DdF.pack();
//        JD_DdF.setModal(true);
//        JD_DdF.setLocationRelativeTo(this);
//        JD_DdF.setVisible(true);
        Pn_DdF.setVisible(true);
        Pn_UML.setVisible(false);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void lb_crearumlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_crearumlMouseClicked
        // TODO add your handling code here:
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_font.getModel();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String fontNames[] = ge.getAvailableFontFamilyNames();
        for (int i = 0; i < fontNames.length; i++) {
            modelo.addElement(fontNames[i]);
        }
        cb_font.setModel(modelo);
        JD_UML.pack();
        JD_UML.setModal(true);
        JD_UML.setLocationRelativeTo(this);
        JD_UML.setVisible(true);


    }//GEN-LAST:event_lb_crearumlMouseClicked

    private void lb_crearumlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_crearumlMouseEntered
        // TODO add your handling code here:
        pn_crearuml.setBackground(Color.gray);
        lb_crearuml.setForeground(Color.black);
    }//GEN-LAST:event_lb_crearumlMouseEntered

    private void lb_crearumlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_crearumlMouseExited
        // TODO add your handling code here:
        pn_crearuml.setBackground(Color.lightGray);
        lb_crearuml.setForeground(Color.black);
    }//GEN-LAST:event_lb_crearumlMouseExited

    private void lb_creardiagMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_creardiagMouseClicked
        // TODO add your handling code here:
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_font2.getModel();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String fontNames[] = ge.getAvailableFontFamilyNames();
        for (int i = 0; i < fontNames.length; i++) {
            modelo.addElement(fontNames[i]);
        }
        cb_font2.setModel(modelo);
        JD_DdF.pack();
        JD_DdF.setModal(true);
        JD_DdF.setLocationRelativeTo(this);
        JD_DdF.setVisible(true);
    }//GEN-LAST:event_lb_creardiagMouseClicked

    private void lb_creardiagMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_creardiagMouseEntered
        // TODO add your handling code here:
        pn_creardiag.setBackground(Color.gray);
        lb_creardiag.setForeground(Color.black);
    }//GEN-LAST:event_lb_creardiagMouseEntered

    private void lb_creardiagMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_creardiagMouseExited
        // TODO add your handling code here:
        pn_creardiag.setBackground(Color.lightGray);
        lb_creardiag.setForeground(Color.black);
    }//GEN-LAST:event_lb_creardiagMouseExited

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
        String name = JOptionPane.showInputDialog(JD_UML, "Ingrese el nombre de la clase: ");
        String hola = "     " + name + " class";
        mypanel p = new mypanel();
        p.setnom(hola);
        p.setVisible(true);
        jpn_UML.add(p);
        pan.add(p);
        jpn_UML.revalidate();
        jpn_UML.repaint();
    }//GEN-LAST:event_jPanel11MouseClicked

    private void jPanel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel17MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.gray);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.gray);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.gray);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.gray);
                }
            }

        }
    }//GEN-LAST:event_jPanel17MouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            Component c2 = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.lightGray);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.lightGray);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.lightGray);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.lightGray);
                }
            }
        }
    }//GEN-LAST:event_jPanel8MouseClicked

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.darkGray);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.darkGray);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.darkGray);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.darkGray);
                }
            }
        }
    }//GEN-LAST:event_jPanel9MouseClicked

    private void jPanel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel21MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.black);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.black);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.black);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.black);
                }
            }
        }
    }//GEN-LAST:event_jPanel21MouseClicked

    private void jPanel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.red);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.red);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.red);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.red);
                }
            }
        }
    }//GEN-LAST:event_jPanel22MouseClicked

    private void jPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel4MousePressed

    private void jPanel4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel4MouseDragged

    private void jPanel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel28MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.cyan);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.cyan);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.cyan);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.cyan);
                }
            }
        }
    }//GEN-LAST:event_jPanel28MouseClicked

    private void jPanel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel23MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.pink);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.pink);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.pink);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.pink);
                }
            }
        }
    }//GEN-LAST:event_jPanel23MouseClicked

    private void jPanel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel24MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.orange);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.orange);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.orange);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.orange);
                }
            }
        }
    }//GEN-LAST:event_jPanel24MouseClicked

    private void jPanel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel25MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.yellow);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.yellow);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.yellow);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.yellow);
                }
            }
        }
    }//GEN-LAST:event_jPanel25MouseClicked

    private void jPanel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel26MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.green);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.green);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.green);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.green);
                }
            }
        }
    }//GEN-LAST:event_jPanel26MouseClicked

    private void jPanel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel27MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.magenta);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.magenta);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.magenta);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.magenta);
                }
            }
        }
    }//GEN-LAST:event_jPanel27MouseClicked

    private void jPanel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel29MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).paintback(Color.blue);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).paintback(Color.blue);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).paintback(Color.blue);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).paintback(Color.blue);
                }
            }
        }
    }//GEN-LAST:event_jPanel29MouseClicked

    private void lb_crearuml1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_crearuml1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_crearuml1MouseClicked

    private void lb_crearuml1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_crearuml1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_crearuml1MouseEntered

    private void lb_crearuml1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_crearuml1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_crearuml1MouseExited

    private void lb_creardiag1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_creardiag1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_creardiag1MouseClicked

    private void lb_creardiag1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_creardiag1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_creardiag1MouseEntered

    private void lb_creardiag1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_creardiag1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lb_creardiag1MouseExited

    private void jLabel7jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7jPanel11MouseClicked
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog(JD_UML, "Ingrese el nombre de la clase: ");
        String hola = "     " + name + " abstract class";
        Abstractpanel p = new Abstractpanel();
        p.setnom(hola);
        p.setVisible(true);
        jpn_UML.add(p);
        pan.add(p);
        jpn_UML.revalidate();
        jpn_UML.repaint();
    }//GEN-LAST:event_jLabel7jPanel11MouseClicked

    private void jPanel20jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel20jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel20jPanel11MouseClicked

    private void jLabel8jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8jPanel11MouseClicked
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog(JD_UML, "Ingrese el nombre de la interfaz: ");
        String hola = "     " + name + " interface";
        Interfaz p = new Interfaz();
        p.setnom(hola);
        p.setVisible(true);
        jpn_UML.add(p);
        pan.add(p);
        jpn_UML.revalidate();
        jpn_UML.repaint();
    }//GEN-LAST:event_jLabel8jPanel11MouseClicked

    private void jPanel30jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel30jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel30jPanel11MouseClicked

    private void lb_HeredarjPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_HeredarjPanel11MouseClicked
        // TODO add your handling code here:
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        Component c;
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                modelo.addElement(((mypanel) c));
                cont++;
            }
            if (c instanceof Abstractpanel) {
                modelo.addElement(((Abstractpanel) c));
                cont++;
            }
            if (c instanceof Interfaz) {
                modelo.addElement(((Interfaz) c));
                cont++;
            }
        }
        cb_padre.setModel(modelo);
        JD_herencia.pack();
        JD_herencia.setModal(true);
        JD_herencia.setLocationRelativeTo(this);
        JD_herencia.setVisible(true);
        JD_herencia.revalidate();
        JD_herencia.repaint();
        JD_herencia.revalidate();
        JD_herencia.repaint();
    }//GEN-LAST:event_lb_HeredarjPanel11MouseClicked

    private void jPanel35jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel35jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel35jPanel11MouseClicked

    private void lb_GenerarCodejPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_GenerarCodejPanel11MouseClicked
        // TODO add your handling code here:
        MostarCodigo.setText(GenerarCodeUml());
        JD_Codigo.pack();
        JD_Codigo.setModal(true);
        JD_Codigo.setLocationRelativeTo(JD_UML);
        JD_Codigo.setVisible(true);
        JD_Codigo.revalidate();
        JD_Codigo.repaint();
    }//GEN-LAST:event_lb_GenerarCodejPanel11MouseClicked

    private void jPanel36jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel36jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel36jPanel11MouseClicked

    private void lb_tenerHijaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_tenerHijaMouseClicked
        // TODO add your handling code here:
        Object c = cb_padre.getSelectedItem();
        String hola = "     " + tf_nomhijo.getText() + " class";
        if (c instanceof mypanel) {
            panelHerencia p = new panelHerencia();
            p.setnom(hola);
            p.setPadre((mypanel) c);
//            p.setBackground((p.getParent()).getBackground());
            p.setVisible(true);
            jpn_UML.add(p);
            pan.add(p);
            jpn_UML.revalidate();
            jpn_UML.repaint();
        }
        if (c instanceof Abstractpanel) {
            panelHerencia p = new panelHerencia();
            p.setnom(hola);
            p.setPadre((Abstractpanel) c);
//            p.paintback((p.getParent()).getBackground());
            p.getTxt().setText(((Abstractpanel) c).getTxtA().getText());
            p.setVisible(true);
            jpn_UML.add(p);
            pan.add(p);
            jpn_UML.revalidate();
            jpn_UML.repaint();
        }
        if (c instanceof Interfaz) {
            panelHerencia p = new panelHerencia();
            p.setnom(hola);
            p.setPadre((Interfaz) c);
//            p.paintback((p.getParent()).getBackground());
            p.getTxt().setText(((Interfaz) c).getTxt().getText());
            p.setVisible(true);
            jpn_UML.add(p);
            pan.add(p);
            jpn_UML.revalidate();
            jpn_UML.repaint();
        }
        JD_herencia.setVisible(false);

    }//GEN-LAST:event_lb_tenerHijaMouseClicked

    private void lb_tenerHijaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_tenerHijaMouseEntered
        // TODO add your handling code here:
        pn_crearHija.setBackground(Color.lightGray);
        lb_tenerHija.setForeground(Color.black);
    }//GEN-LAST:event_lb_tenerHijaMouseEntered

    private void lb_tenerHijaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_tenerHijaMouseExited
        // TODO add your handling code here:
        pn_crearHija.setBackground(Color.gray);
        lb_tenerHija.setForeground(Color.black);
    }//GEN-LAST:event_lb_tenerHijaMouseExited

    private void cb_fontItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_fontItemStateChanged
        // TODO add your handling code here:

        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {

//                if (((mypanel) c).isSelec()) {
//                    doc = ((mypanel) c).getTxt().getStyledDocument();
//                    estilo = (((mypanel) c).getTxt()).addStyle("miEstilo", null);
//                    StyleConstants.setFontFamily(estilo, cb_font.getSelectedItem().toString());
//                    //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((mypanel) c).getTxt().getSelectionStart(),
//                            ((mypanel) c).getTxt().getSelectionEnd() - ((mypanel) c).getTxt().getSelectionStart(),
//                            ((mypanel) c).getTxt().getStyle("miEstilo"),
//                            true);
//                    ((mypanel) c).getTxt().setStyledDocument(doc);
//                    doc = ((mypanel) c).getTxt2().getStyledDocument();
//                    estilo = (((mypanel) c).getTxt2()).addStyle("miEstilo", null);
//                    StyleConstants.setFontFamily(estilo, cb_font.getSelectedItem().toString());
//                    //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((mypanel) c).getTxt2().getSelectionStart(),
//                            ((mypanel) c).getTxt2().getSelectionEnd() - ((mypanel) c).getTxt2().getSelectionStart(),
//                            ((mypanel) c).getTxt2().getStyle("miEstilo"),
//                            true);
//                    ((mypanel) c).getTxt2().setStyledDocument(doc);
//                }
            }
            if (c instanceof Abstractpanel) {
//                if (((Abstractpanel) c).isSelec()) {
//                    doc = ((Abstractpanel) c).getTxt().getStyledDocument();
//                    estilo = (((Abstractpanel) c).getTxt()).addStyle("miEstilo", null);
//                    StyleConstants.setFontFamily(estilo, cb_font.getSelectedItem().toString());
//                    //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((Abstractpanel) c).getTxt().getSelectionStart(),
//                            ((Abstractpanel) c).getTxt().getSelectionEnd() - ((Abstractpanel) c).getTxt().getSelectionStart(),
//                            ((Abstractpanel) c).getTxt().getStyle("miEstilo"),
//                            true);
//                    ((Abstractpanel) c).getTxt().setStyledDocument(doc);
//                    doc = ((Abstractpanel) c).getTxt2().getStyledDocument();
//                    estilo = (((Abstractpanel) c).getTxt2()).addStyle("miEstilo", null);
//                    StyleConstants.setFontFamily(estilo, cb_font.getSelectedItem().toString());
//                    //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((Abstractpanel) c).getTxt2().getSelectionStart(),
//                            ((Abstractpanel) c).getTxt2().getSelectionEnd() - ((Abstractpanel) c).getTxt2().getSelectionStart(),
//                            ((Abstractpanel) c).getTxt2().getStyle("miEstilo"),
//                            true);
//                    ((Abstractpanel) c).getTxt2().setStyledDocument(doc);
//                }
            }
//            if (c instanceof Interfaz) {
//                if (((Interfaz) c).isSelec()) {
//                    doc = ((Interfaz) c).getTxt().getStyledDocument();
//                    estilo = (((Interfaz) c).getTxt()).addStyle("miEstilo", null);
//                    StyleConstants.setFontFamily(estilo, cb_font.getSelectedItem().toString());
//                    //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((Interfaz) c).getTxt().getSelectionStart(),
//                            ((Interfaz) c).getTxt().getSelectionEnd() - ((Interfaz) c).getTxt().getSelectionStart(),
//                            ((Interfaz) c).getTxt().getStyle("miEstilo"),
//                            true);
//                    ((Interfaz) c).getTxt().setStyledDocument(doc);
//                    doc = ((Interfaz) c).getTxt2().getStyledDocument();
//                    estilo = (((Interfaz) c).getTxt2()).addStyle("miEstilo", null);
//                    StyleConstants.setFontFamily(estilo, cb_font.getSelectedItem().toString());
//                    //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((Interfaz) c).getTxt2().getSelectionStart(),
//                            ((Interfaz) c).getTxt2().getSelectionEnd() - ((Interfaz) c).getTxt2().getSelectionStart(),
//                            ((Interfaz) c).getTxt2().getStyle("miEstilo"),
//                            true);
//                    ((Interfaz) c).getTxt2().setStyledDocument(doc);
//
//                }
//            }
        }


    }//GEN-LAST:event_cb_fontItemStateChanged

    private void cb_tamañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tamañoActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
//                if (((mypanel) c).isSelec()) {
//                    doc = ((mypanel) c).getTxt().getStyledDocument();
//                    estilo = (((mypanel) c).getTxt()).addStyle("miEstilo", null);
//                    StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((mypanel) c).getTxt().getSelectionStart(),
//                            ((mypanel) c).getTxt().getSelectionEnd() - ((mypanel) c).getTxt().getSelectionStart(),
//                            ((mypanel) c).getTxt().getStyle("miEstilo"),
//                            true);
//                    ((mypanel) c).getTxt().setStyledDocument(doc);
//                    doc = ((mypanel) c).getTxt2().getStyledDocument();
//                    estilo = (((mypanel) c).getTxt2()).addStyle("miEstilo", null);
//                    StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                    doc.setCharacterAttributes(((mypanel) c).getTxt2().getSelectionStart(),
//                            ((mypanel) c).getTxt2().getSelectionEnd() - ((mypanel) c).getTxt2().getSelectionStart(),
//                            ((mypanel) c).getTxt2().getStyle("miEstilo"),
//                            true);
//                    ((mypanel) c).getTxt2().setStyledDocument(doc);
//
//                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
//                    if (((Abstractpanel) c).isSelec()) {
//                        doc = ((Abstractpanel) c).getTxt().getStyledDocument();
//                        estilo = (((Abstractpanel) c).getTxt()).addStyle("miEstilo", null);
//                        StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                        doc.setCharacterAttributes(((Abstractpanel) c).getTxt().getSelectionStart(),
//                                ((Abstractpanel) c).getTxt().getSelectionEnd() - ((Abstractpanel) c).getTxt().getSelectionStart(),
//                                ((Abstractpanel) c).getTxt().getStyle("miEstilo"),
//                                true);
//                        ((Abstractpanel) c).getTxt().setStyledDocument(doc);
//                        doc = ((Abstractpanel) c).getTxt2().getStyledDocument();
//                        estilo = (((Abstractpanel) c).getTxt2()).addStyle("miEstilo", null);
//                        StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                        doc.setCharacterAttributes(((Abstractpanel) c).getTxt2().getSelectionStart(),
//                                ((Abstractpanel) c).getTxt2().getSelectionEnd() - ((Abstractpanel) c).getTxt2().getSelectionStart(),
//                                ((Abstractpanel) c).getTxt2().getStyle("miEstilo"),
//                                true);
//                        ((Abstractpanel) c).getTxt2().setStyledDocument(doc);
//
//                    }
                }
            }
//            if (c instanceof Interfaz) {
//                if (((Interfaz) c).isSelec()) {
//                    if (((Interfaz) c).isSelec()) {
//                        doc = ((Interfaz) c).getTxt().getStyledDocument();
//                        estilo = (((Interfaz) c).getTxt()).addStyle("miEstilo", null);
//                        StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                        doc.setCharacterAttributes(((Interfaz) c).getTxt().getSelectionStart(),
//                                ((Interfaz) c).getTxt().getSelectionEnd() - ((Interfaz) c).getTxt().getSelectionStart(),
//                                ((Interfaz) c).getTxt().getStyle("miEstilo"),
//                                true);
//                        ((Interfaz) c).getTxt().setStyledDocument(doc);
//                        doc = ((Interfaz) c).getTxt2().getStyledDocument();
//                        estilo = (((Interfaz) c).getTxt2()).addStyle("miEstilo", null);
//                        StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
//                        doc.setCharacterAttributes(((Interfaz) c).getTxt2().getSelectionStart(),
//                                ((Interfaz) c).getTxt2().getSelectionEnd() - ((Interfaz) c).getTxt2().getSelectionStart(),
//                                ((Interfaz) c).getTxt2().getStyle("miEstilo"),
//                                true);
//                        ((Interfaz) c).getTxt2().setStyledDocument(doc);
//
//                    }
//                }
//            }
        }

    }//GEN-LAST:event_cb_tamañoActionPerformed

    private void cb_styleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_styleItemStateChanged
        // TODO add your handling code here:
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {

                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {

                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    if (((Interfaz) c).isSelec()) {

                    }
                }
            }
        }

    }//GEN-LAST:event_cb_styleItemStateChanged

    private void jlb_desicionjPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlb_desicionjPanel11MouseClicked
        // TODO add your handling code here:
        Rombo r = new Rombo();
        r.setVisible(true);
        figs.add(r);
        jpn_diagrama.add(r);

        jpn_diagrama.revalidate();
        jpn_diagrama.repaint();
    }//GEN-LAST:event_jlb_desicionjPanel11MouseClicked

    private void jPanel32jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel32jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel32jPanel11MouseClicked

    private void jlb_ciclojPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlb_ciclojPanel11MouseClicked
        // TODO add your handling code here:
        circulo c = new circulo();
        c.setVisible(true);
        figs.add(c);
        jpn_diagrama.add(c);
        jpn_diagrama.revalidate();
        jpn_diagrama.repaint();
    }//GEN-LAST:event_jlb_ciclojPanel11MouseClicked

    private void jPanel33jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel33jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel33jPanel11MouseClicked

    private void jlb_datosjPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlb_datosjPanel11MouseClicked
        // TODO add your handling code here:
        Paralelogramo p = new Paralelogramo();
        p.setVisible(true);
        figs.add(p);
        jpn_diagrama.add(p);
        jpn_diagrama.revalidate();
        jpn_diagrama.repaint();
    }//GEN-LAST:event_jlb_datosjPanel11MouseClicked

    private void jPanel34jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel34jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel34jPanel11MouseClicked

    private void lb_GenerarFlujojPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_GenerarFlujojPanel11MouseClicked
        // TODO add your handling code here:
        Arbol tree = genarbolflujo();
        String res = tree.recorrer(tree.getRaiz());
        System.out.println(res);


    }//GEN-LAST:event_lb_GenerarFlujojPanel11MouseClicked
    public Arbol genarbolflujo() {

        Arbol flujograma = new Arbol();
        flujograma.setRaiz(new FormaGeneral("Inicio"));
        boolean existen = true;
        int cont = 2;
        int tamanio = 0;

        for (FormaGeneral fig : figs) {

            String[] temp = fig.getIndice().getText().split("\\.");

            if (temp.length >= cont) {
                flujograma.agregar(flujograma.getRaiz(), fig);
                System.out.println("Se va a agregar la figura " + fig);
            } else {
                System.out.println("Se va a agregar la figura " + fig);
                flujograma.getRaiz().setHijo(fig);
            }
            if (figs.indexOf(fig) == figs.size()) {
                cont++;
            }

            if (tamanio == figs.size()) {
                existen = false;
            }
        }
        tamanio++;

        //}
        return flujograma;

    }
    private void jPanel38jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel38jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel38jPanel11MouseClicked

    private void jPanel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel41MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.gray);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.gray);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.gray);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.gray);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.gray);
                }
            }
        }
    }//GEN-LAST:event_jPanel41MouseClicked

    private void jPanel42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel42MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.lightGray);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.lightGray);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.lightGray);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.lightGray);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.lightGray);
                }

            }
        }

    }//GEN-LAST:event_jPanel42MouseClicked

    private void jPanel43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel43MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.darkGray);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.darkGray);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.darkGray);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.darkGray);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.darkGray);
                }
            }
        }
    }//GEN-LAST:event_jPanel43MouseClicked

    private void jPanel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel44MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.black);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.black);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.black);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.black);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.black);
                }

            }
        }
    }//GEN-LAST:event_jPanel44MouseClicked

    private void jPanel45MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel45MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.red);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.red);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.red);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.red);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.red);
                }

            }
        }
    }//GEN-LAST:event_jPanel45MouseClicked

    private void jPanel46MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel46MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.pink);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.pink);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.pink);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.pink);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.pink);
                }

            }
        }
    }//GEN-LAST:event_jPanel46MouseClicked

    private void jPanel47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel47MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.orange);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.orange);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.orange);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.orange);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.orange);
                }

            }
        }
    }//GEN-LAST:event_jPanel47MouseClicked

    private void jPanel48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel48MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.yellow);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.yellow);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.yellow);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.yellow);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.yellow);
                }

            }
        }
    }//GEN-LAST:event_jPanel48MouseClicked

    private void jPanel49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel49MouseClicked
        // TODO add your handling code here:

        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.green);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.green);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.green);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.green);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.green);
                }

            }
        }
    }//GEN-LAST:event_jPanel49MouseClicked

    private void jPanel50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel50MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.magenta);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.magenta);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.magenta);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.magenta);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.magenta);
                }

            }
        }
    }//GEN-LAST:event_jPanel50MouseClicked

    private void jPanel51MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel51MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.cyan);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.cyan);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.cyan);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.cyan);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.cyan);
                }

            }
        }

    }//GEN-LAST:event_jPanel51MouseClicked

    private void jPanel52MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel52MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    ((Rombo) c).paintback(Color.blue);
                }
                if (c instanceof circulo) {
                    ((circulo) c).paintback(Color.blue);
                }
                if (c instanceof Proceso) {
                    ((Proceso) c).paintback(Color.blue);
                }
                if (c instanceof Paralelogramo) {
                    ((Paralelogramo) c).paintback(Color.blue);
                }
                if (c instanceof InicioFin) {
                    ((InicioFin) c).paintback(Color.blue);
                }

            }
        }
    }//GEN-LAST:event_jPanel52MouseClicked

    private void cb_font2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_font2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_font2ItemStateChanged

    private void cb_StyleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_StyleItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_StyleItemStateChanged

    private void cb_tamaño1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tamaño1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_tamaño1ActionPerformed

    private void lb_procesojPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_procesojPanel11MouseClicked
        // TODO add your handling code here:
        Proceso p = new Proceso();
        p.setVisible(true);
        figs.add(p);
        jpn_diagrama.add(p);
        jpn_diagrama.revalidate();
        jpn_diagrama.repaint();
    }//GEN-LAST:event_lb_procesojPanel11MouseClicked

    private void jPanel39jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel39jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel39jPanel11MouseClicked
    public BufferedImage captureComponent(Component component) {
        BufferedImage image = new BufferedImage(component.getWidth(), component.getHeight(), BufferedImage.TYPE_INT_RGB);
        component.paint(image.getGraphics());
        return image;
    }

    public void saveAsJPG(Component component) {
        //Guardar solo en PNG
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Imagen como PNG");

        int userSelection = fileChooser.showSaveDialog(JD_UML);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String nombre = fileToSave.getAbsolutePath(); // Obtener la ruta completa seleccionada por el usuario

            int Pa = jpn_UML.getWidth();
            int Pal = jpn_UML.getHeight();

            BufferedImage bf = new BufferedImage(Pa, Pal, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = bf.createGraphics();

            jpn_UML.paint(g2d);
            g2d.dispose();

            try {
                ImageIO.write(bf, "PNG", new File(nombre + ".png"));
                JOptionPane.showMessageDialog(JD_UML, "Imagen creada exitosamente");
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(JD_UML, "No se seleccion贸 ninguna ubicaci贸n para guardar la imagen.");
        }
    }

    public void saveAsJPG2(Component component) {
        //Guardar solo en PNG
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Imagen como PNG");

        int userSelection = fileChooser.showSaveDialog(JD_DdF);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String nombre = fileToSave.getAbsolutePath(); // Obtener la ruta completa seleccionada por el usuario

            int Pa = jpn_diagrama.getWidth();
            int Pal = jpn_diagrama.getHeight();

            BufferedImage bf = new BufferedImage(Pa, Pal, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = bf.createGraphics();

            jpn_diagrama.paint(g2d);
            g2d.dispose();

            try {
                ImageIO.write(bf, "PNG", new File(nombre + ".png"));
                JOptionPane.showMessageDialog(JD_UML, "Imagen creada exitosamente");
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(JD_UML, "No se seleccion贸 ninguna ubicaci贸n para guardar la imagen.");
        }
    }

    public void SaveAsPdf2() {
        //Guardar en PNG Y PDF a la vez
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Imagen como PNG y PDF");

        int userSelection = fileChooser.showSaveDialog(JD_DdF);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String nombre = fileToSave.getAbsolutePath(); // Obtener la ruta completa seleccionada por el usuario

            int Pa = jpn_diagrama.getWidth();
            int Pal = jpn_diagrama.getHeight();

            BufferedImage bf = new BufferedImage(Pa, Pal, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = bf.createGraphics();

            jpn_diagrama.paint(g2d);
            g2d.dispose();
            jpn_diagrama.paint(g2d);
            g2d.dispose();

            PDDocument document = new PDDocument();
            PDPage page = new PDPage(new PDRectangle(Pa, Pal));
            document.addPage(page);

            try {
                ImageIO.write(bf, "PNG", new File(nombre + ".png"));
                JOptionPane.showMessageDialog(JD_DdF, "Imagen creada exitosamente");
            } catch (IOException e) {
                e.printStackTrace();
            }

            try {
                PDPageContentStream contentStream = new PDPageContentStream(document, page);
                contentStream.drawImage(PDImageXObject.createFromFile(nombre + ".png", document), TOP_ALIGNMENT, TOP_ALIGNMENT);
                contentStream.close();
                document.save(new File(nombre + ".pdf"));
                document.close();
                JOptionPane.showMessageDialog(JD_DdF, "Archivo pdf creado exitosamente");
            } catch (IOException e) {
                e.printStackTrace();

            }
        } else {
            JOptionPane.showMessageDialog(JD_UML, "No se seleccionó ninguna ubicación para guardar la imagen.");
        }
    }

    public void SaveAsPdf() {
        //Guardar en PNG Y PDF a la vez
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Imagen como PNG y PDF");

        int userSelection = fileChooser.showSaveDialog(JD_UML);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String nombre = fileToSave.getAbsolutePath(); // Obtener la ruta completa seleccionada por el usuario

            int Pa = jpn_UML.getWidth();
            int Pal = jpn_UML.getHeight();

            BufferedImage bf = new BufferedImage(Pa, Pal, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = bf.createGraphics();

            jpn_UML.paint(g2d);
            g2d.dispose();
            jpn_UML.paint(g2d);
            g2d.dispose();

            PDDocument document = new PDDocument();
            PDPage page = new PDPage(new PDRectangle(Pa, Pal));
            document.addPage(page);

            try {
                ImageIO.write(bf, "PNG", new File(nombre + ".png"));
                JOptionPane.showMessageDialog(JD_UML, "Imagen creada exitosamente");
            } catch (IOException e) {
                e.printStackTrace();
            }

            try {
                PDPageContentStream contentStream = new PDPageContentStream(document, page);
                contentStream.drawImage(PDImageXObject.createFromFile(nombre + ".png", document), TOP_ALIGNMENT, TOP_ALIGNMENT);
                contentStream.close();
                document.save(new File(nombre + ".pdf"));
                document.close();
                JOptionPane.showMessageDialog(JD_UML, "Archivo pdf creado exitosamente");
            } catch (IOException e) {
                e.printStackTrace();

            }
        } else {
            JOptionPane.showMessageDialog(JD_UML, "No se seleccionó ninguna ubicación para guardar la imagen.");
        }
    }
    private void bt_cambiarfontMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_cambiarfontMouseClicked
        // TODO add your handling code here:
        Font f=null;
        if(cb_Style.getSelectedIndex()==0){
            if (cb_style.getSelectedIndex()==0){
                f = new Font (cb_font.getSelectedItem().toString(), Font.PLAIN, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));   
            }
            else if (cb_style.getSelectedIndex()==1){
                f = new Font(cb_font.getSelectedItem().toString(), Font.BOLD, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
            }
            else if (cb_style.getSelectedIndex()==2){
                f = new Font(cb_font.getSelectedItem().toString(), Font.ITALIC, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
            }
            else if (cb_style.getSelectedIndex()==3){
                f = new Font(cb_font.getSelectedItem().toString(), Font.BOLD + Font.ITALIC, Integer.parseInt(cb_tamaño.getSelectedItem().toString()));
            }
        }
         
        for (Component c : jpn_UML.getComponents()) {
            if (c instanceof mypanel) {
                ((mypanel) c).setfont(f);
            } else if (c instanceof Abstractpanel) {
                ((Abstractpanel) c).setfont(f);
            } else if (c instanceof Interfaz) {
                ((Interfaz) c).setfont(f);
            } else if (c instanceof panelHerencia) {
                ((panelHerencia) c).setfont(f);
            }

        }
    }//GEN-LAST:event_bt_cambiarfontMouseClicked

    private void jlb_desicion1jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlb_desicion1jPanel11MouseClicked
        // TODO add your handling code here:
        InicioFin I = new InicioFin();
        I.setVisible(true);
        figs.add(I);
        jpn_diagrama.add(I);
        jpn_diagrama.revalidate();
        jpn_diagrama.repaint();

    }//GEN-LAST:event_jlb_desicion1jPanel11MouseClicked

    private void jPanel53jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel53jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel53jPanel11MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {

        } else {
            Color co = JColorChooser.showDialog(JD_DdF, "Seleccione el color", Color.yellow);
            for (int i = 0; i < jpn_diagrama.getComponentCount(); i++) {
                Component c = jpn_diagrama.getComponent(i);
                if (c instanceof Rombo) {
                    if (((Rombo) c).isSelec()) {
                        ((Rombo) c).settexto(co);
                    }
                }
                if (c instanceof circulo) {
                    if (((circulo) c).isSelec()) {
                        ((circulo) c).settexto(co);
                    }
                }
                if (c instanceof Proceso) {
                    if (((Proceso) c).isSelec()) {
                        ((Proceso) c).settexto(co);
                    }
                }
                if (c instanceof Paralelogramo) {
                    if (((Paralelogramo) c).isSelec()) {
                        ((Paralelogramo) c).settexto(co);
                    }
                }
                if (c instanceof InicioFin) {
                    if (((InicioFin) c).isSelec()) {
                        ((InicioFin) c).settexto(co);
                    }
                }

            }
        }
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        Color col = JColorChooser.showDialog(JD_UML, "Eliga el color de la letra", Color.yellow);
        for (int i = 0; i < jpn_UML.getComponentCount(); i++) {
            Component c = jpn_UML.getComponent(i);
            if (c instanceof mypanel) {
                if (((mypanel) c).isSelec()) {
                    ((mypanel) c).settexto(col);
                }
            }
            if (c instanceof Abstractpanel) {
                if (((Abstractpanel) c).isSelec()) {
                    ((Abstractpanel) c).settexto(col);
                }
            }
            if (c instanceof Interfaz) {
                if (((Interfaz) c).isSelec()) {
                    ((Interfaz) c).settexto(col);
                }
            }
            if (c instanceof panelHerencia) {
                if (((panelHerencia) c).isSelec()) {
                    ((panelHerencia) c).settexto(col);
                }
            }

        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void Bt_setfontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt_setfontActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Bt_setfontActionPerformed

    private void Bt_setfontMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Bt_setfontMouseClicked
        // TODO add your handling code here:
        Font f=null;
        if(cb_Style.getSelectedIndex()==0){
            if (cb_Style.getSelectedIndex()==0){
                f = new Font (cb_font2.getSelectedItem().toString(), Font.PLAIN, Integer.parseInt(cb_tamaño1.getSelectedItem().toString()));   
            }
            else if (cb_Style.getSelectedIndex()==1){
                f = new Font(cb_font2.getSelectedItem().toString(), Font.BOLD, Integer.parseInt(cb_tamaño1.getSelectedItem().toString()));
            }
            else if (cb_Style.getSelectedIndex()==2){
                f = new Font(cb_font2.getSelectedItem().toString(), Font.ITALIC, Integer.parseInt(cb_tamaño1.getSelectedItem().toString()));
            }
            else if (cb_Style.getSelectedIndex()==3){
                f = new Font(cb_font2.getSelectedItem().toString(), Font.BOLD + Font.ITALIC, Integer.parseInt(cb_tamaño1.getSelectedItem().toString()));
            }
        }
        
        for (Component c : jpn_diagrama.getComponents()) {
            if (c instanceof Rombo) {
                ((Rombo) c).setfont(f);
            } else if (c instanceof Proceso) {
                ((Proceso) c).setfont(f);
            } else if (c instanceof circulo) {
                ((circulo) c).setfont(f);
            } else if (c instanceof Paralelogramo) {
                ((Paralelogramo) c).setfont(f);
            } else if (c instanceof InicioFin) {
                ((InicioFin) c).setfont(f);
            }

        }
    }//GEN-LAST:event_Bt_setfontMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        PrintRecord(jpn_diagrama);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        SaveAsPdf2();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        saveAsJPG(jpn_UML);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        SaveAsPdf();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        saveAsJPG2(jpn_diagrama);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed

        PrintRecord(jpn_UML);

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();

        jfc.setCurrentDirectory(new File("C:\\Users\\Junnior Sauceda\\Desktop\\CosasProyecto"));

        FileNameExtensionFilter filtro = new FileNameExtensionFilter(
                "Archivos Jr",
                "Jr");
        jfc.setFileFilter(filtro);
        int seleccion = jfc.showSaveDialog(this);

        FileOutputStream fw = null;
        ObjectOutputStream bw = null;

        if (seleccion == JFileChooser.APPROVE_OPTION) {

            try {
                File file = null;
                if (jfc.getFileFilter().getDescription().equals("Archivos Jr")) {
                    file = new File(jfc.getSelectedFile().getPath() + ".Jr");
                } else {
                    file = jfc.getSelectedFile();
                }
                fw = new FileOutputStream(file);
                bw = new ObjectOutputStream(fw);

                for (Object figura : pan) {
                    if (figura instanceof panelHerencia) {

                        panelHerencia temp = (panelHerencia) figura;
                        DatosHerencia dat = GenDatosHeren(temp);
                        bw.writeObject(dat);
                        bw.flush();
                    } else if (figura instanceof Abstractpanel) {

                        Abstractpanel temp = (Abstractpanel) figura;
                        DatosAbstrac dat = GenDatosAbs(temp);
                        bw.writeObject(dat);
                        bw.flush();

                    } else if (figura instanceof Interfaz) {
                        Interfaz temp = (Interfaz) figura;
                        DatosInter dat = GenDatosInter(temp);
                        bw.writeObject(dat);
                        bw.flush();

                    } else if (figura instanceof mypanel) {
                        mypanel temp = (mypanel) figura;
                        DatosSimp dat = GenDatosSimp(temp);
                        bw.writeObject(dat);
                        bw.flush();
                    }


                }

                JOptionPane.showMessageDialog(this, "Guardado exitosamente!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error");
                e.printStackTrace();
            }
            try {
                bw.close();
                fw.close();

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    
    
    private void jMenuItem9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem9MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9MouseClicked

    private void jMenuItem10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem10MouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_jMenuItem10MouseClicked

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        Desceri.clear();
        File fichero = null;
        FileInputStream entrada = null;
        ObjectInputStream objeto = null;
        try {
            JFileChooser jfc = new JFileChooser();
            jfc.setCurrentDirectory(new File("C:\\Users\\Junnior Sauceda\\Desktop\\CosasProyecto"));
            FileNameExtensionFilter filtro
                    = new FileNameExtensionFilter(
                            "Archivos Jr", "Jr");
            jfc.setFileFilter(filtro);

            int seleccion = jfc.showOpenDialog(JD_UML);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                int confirm = JOptionPane.showConfirmDialog(this, "Desea copiar los datos?");
                if (confirm != JOptionPane.YES_OPTION) {
                    jpn_UML.removeAll();
                }
                fichero = jfc.getSelectedFile();
                entrada
                        = new FileInputStream(fichero);
                objeto
                        = new ObjectInputStream(entrada);

                try {

                    while (true) {
                        Object temp = objeto.readObject();
                        if (temp instanceof DatosSimp) {
                            DatosSimp S = (DatosSimp) temp;
                            mypanel p = toPanelSimp(S);
                            Desceri.add(p);
                            jpn_UML.add(p);
                        } else if (temp instanceof DatosAbstrac) {
                            DatosAbstrac S = (DatosAbstrac) temp;
                            Abstractpanel pa = toPanelAbs(S);
                            Desceri.add(pa);
                            jpn_UML.add(pa);
                        } else if (temp instanceof DatosHerencia) {
                            DatosHerencia S = (DatosHerencia) temp;
                            panelHerencia pa = toPanelHer(S);
                            Desceri.add(pa);
                            jpn_UML.add(pa);
                        } else if (temp instanceof DatosInter) {
                            DatosInter S = (DatosInter) temp;
                            Interfaz pa = toPanelInter(S);
                            Desceri.add(pa);
                            jpn_UML.add(pa);
                        }

                    }
                } catch (Exception e) {

                }
                for (Object obj : Desceri) {
                    Object Ob = obj;
                    if (Ob instanceof mypanel) {

                        mypanel P = ((mypanel) Ob);
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_UML.add(P);

                        jpn_UML.revalidate();
                        jpn_UML.repaint();
                    } else if (Ob instanceof Abstractpanel) {
                        Abstractpanel P = (Abstractpanel) Ob;
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_UML.add(P);
                        jpn_UML.revalidate();
                        jpn_UML.repaint();
                    } else if (Ob instanceof panelHerencia) {
                        panelHerencia P = (panelHerencia) Ob;
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_UML.add(P);
                        jpn_UML.revalidate();
                        jpn_UML.repaint();
                    } else if (Ob instanceof Interfaz) {
                        Interfaz P = (Interfaz) Ob;
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_UML.add(P);
                        jpn_UML.revalidate();
                        jpn_UML.repaint();
                    }
                }

            } //fin if

        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            objeto.close();
            entrada.close();
        } catch (IOException ex) {
        }


    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();

        jfc.setCurrentDirectory(new File("C:\\Users\\Junnior Sauceda\\Desktop\\CosasProyecto"));

        FileNameExtensionFilter filtro = new FileNameExtensionFilter(
                "Archivos Jr",
                "Jr");
        jfc.setFileFilter(filtro);
        int seleccion = jfc.showSaveDialog(this);

        FileOutputStream fw = null;
        ObjectOutputStream bw = null;

        if (seleccion == JFileChooser.APPROVE_OPTION) {

            try {
                File file = null;
                if (jfc.getFileFilter().getDescription().equals("Archivos Jr")) {
                    file = new File(jfc.getSelectedFile().getPath() + ".Jr");
                } else {
                    file = jfc.getSelectedFile();
                }
                fw = new FileOutputStream(file);
                bw = new ObjectOutputStream(fw);

                for (Object figura : figs) {
                    
                    if (figura instanceof Rombo) {
                        
                        Rombo temp = (Rombo) figura;
                        DatosRombo dat = GenDatosRombo(temp);
                        bw.writeObject(dat);
                        bw.flush();
                    } 
                    else if (figura instanceof circulo) {
                        
                        circulo temp = (circulo) figura;
                        DatosCiclo dat = GenDatosCiclo(temp);
                        bw.writeObject(dat);
                        bw.flush();
                    } 
                    else if (figura instanceof Paralelogramo) {
                        
                        Paralelogramo temp = (Paralelogramo) figura;
                        DatosDat dat = GenDatosDat(temp);
                        bw.writeObject(dat);
                        bw.flush();
                    }
                    else if (figura instanceof Proceso) {
                        
                        Proceso temp = (Proceso) figura;
                        DatosProcess dat = GenDatosProce(temp);
                        bw.writeObject(dat);
                        bw.flush();
                    }
                    else if (figura instanceof InicioFin) {
                        
                        InicioFin temp = (InicioFin) figura;
                        DatosInicio dat = GenDatosInic(temp);
                        bw.writeObject(dat);
                        bw.flush();
                    }
                    


                }

                JOptionPane.showMessageDialog(this, "Guardado exitosamente!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error");
                e.printStackTrace();
            }
            try {
                bw.close();
                fw.close();

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        Desceri.clear();
        File fichero = null;
        FileInputStream entrada = null;
        ObjectInputStream objeto = null;
        try {
            JFileChooser jfc = new JFileChooser();
            jfc.setCurrentDirectory(new File("C:\\Users\\Junnior Sauceda\\Desktop\\CosasProyecto"));
            FileNameExtensionFilter filtro
                    = new FileNameExtensionFilter(
                            "Archivos Jr", "Jr");
            jfc.setFileFilter(filtro);

            int seleccion = jfc.showOpenDialog(JD_DdF);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                int confirm = JOptionPane.showConfirmDialog(this, "Desea copiar los datos?");
                if (confirm != JOptionPane.YES_OPTION) {
                    jpn_diagrama.removeAll();
                }
                fichero = jfc.getSelectedFile();
                entrada
                        = new FileInputStream(fichero);
                objeto
                        = new ObjectInputStream(entrada);

                try {

                    while (true) {
                        Object temp = objeto.readObject();
                        if (temp instanceof DatosRombo) {
                            DatosRombo S = (DatosRombo) temp;
                            Rombo p = toRombo(S);
                            Desceri.add(p);
                            jpn_diagrama.add(p);
                        }
                        
                        else if (temp instanceof DatosCiclo) {
                            DatosCiclo S = (DatosCiclo) temp;
                            circulo p = toCiclo(S);
                            Desceri.add(p);
                            jpn_diagrama.add(p);
                        } 
                        else if (temp instanceof DatosDat) {
                            DatosDat S = (DatosDat) temp;
                            Paralelogramo p = toDatos(S);
                            Desceri.add(p);
                            jpn_diagrama.add(p);
                        }
                        else if (temp instanceof DatosProcess) {
                            DatosProcess S = (DatosProcess) temp;
                            Proceso p = toProceso(S);
                            Desceri.add(p);
                            jpn_diagrama.add(p);
                        }
                        else if (temp instanceof DatosInicio) {
                            DatosInicio S = (DatosInicio) temp;
                            InicioFin p = toInicio(S);
                            Desceri.add(p);
                            jpn_diagrama.add(p);
                        }

                    }
                } catch (Exception e) {

                }
                for (Object obj : Desceri) {
                    Object Ob = obj;
                    if (Ob instanceof Rombo) {
                        Rombo P = ((Rombo) Ob);
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_diagrama.add(P);
                        jpn_diagrama.revalidate();
                        jpn_diagrama.repaint();
                    }
                    else if (Ob instanceof circulo) {
                        circulo P = ((circulo) Ob);
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_diagrama.add(P);
                        jpn_diagrama.revalidate();
                        jpn_diagrama.repaint();
                    }
                    else if (Ob instanceof Paralelogramo) {
                        Paralelogramo P = ((Paralelogramo) Ob);
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_diagrama.add(P);
                        jpn_diagrama.revalidate();
                        jpn_diagrama.repaint();
                    }
                    else if (Ob instanceof Proceso) {
                        Proceso P = ((Proceso) Ob);
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_diagrama.add(P);
                        jpn_diagrama.revalidate();
                        jpn_diagrama.repaint();
                    }
                    else if (Ob instanceof InicioFin) {
                        InicioFin P = ((InicioFin) Ob);
                        P.revalidate();
                        P.repaint();
                        P.setVisible(true);
                        jpn_diagrama.add(P);
                        jpn_diagrama.revalidate();
                        jpn_diagrama.repaint();
                    }
                }

            } //fin if

        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            objeto.close();
            entrada.close();
        } catch (IOException ex) {
        }


    }//GEN-LAST:event_jMenuItem9ActionPerformed

    public mypanel toPanelSimp(DatosSimp X) {
        mypanel p = new mypanel();
        p.setnom(X.getNombre());
        p.paintback(X.getColor());
        p.getTxt().setText(X.getMeth());
        p.getTxt2().setText(X.getAtrib());
        p.setfont(X.getFont());

        return p;
    }

    public Abstractpanel toPanelAbs(DatosAbstrac X) {
        Abstractpanel p = new Abstractpanel();
        p.setnom(X.getNombre() + " abstract class");
        p.paintback(X.getColor());
        p.getTxtA().setText((X.getMetodos()));
        p.setfont(X.getF());
        return p;
    }

    public panelHerencia toPanelHer(DatosHerencia X) {
        panelHerencia p = new panelHerencia();
        p.setnom(X.getNombre() + " class");
        p.paintback(X.getColor());
        p.getTxt().setText(X.getMetodos());
        p.getTxt2().setText(X.getAtributos());
        p.setfont(X.getFon());
        p.setPadre(X.getPadre());
        return p;
    }
    
    public Rombo toRombo(DatosRombo X) {
        Rombo p = new Rombo();
        p.paintback(X.getColor());
        p.getText().setText(X.getMetodo());
        p.setfont(X.getFont());
        return p;
    }
    public circulo toCiclo(DatosCiclo X) {
        circulo p = new circulo();
        p.paintback(X.getColor());
        p.getArea().setText(X.getMetodo());
        p.setfont(X.getFont());
        return p;
    }
    public Proceso toProceso(DatosProcess X) {
        Proceso p = new Proceso();
        p.paintback(X.getColor());
        p.getTxt().setText(X.getMetodo());
        p.setfont(X.getFont());
        return p;
    }
    public InicioFin toInicio(DatosInicio X) {
        InicioFin p = new InicioFin();
        p.paintback(X.getColor());
        p.getArea().setText(X.getMetodo());
        p.setfont(X.getFont());
        return p;
    }
    public Paralelogramo toDatos(DatosDat X) {
        Paralelogramo p = new Paralelogramo();
        p.paintback(X.getColor());
        p.getArea().setText(X.getMetodo());
        p.setfont(X.getFont());
        return p;
    }

    public Interfaz toPanelInter(DatosInter X) {
        Interfaz p = new Interfaz();
        p.setnom(X.getNombre() + " class");
        p.paintback(X.getC());
        p.getTxt().setText(X.getMetodos());
        p.setfont(X.getFont());
        return p;
    }

    public String GenerarCodeUml() {
        pan = new ArrayList<>();
        Component[] pane = jpn_UML.getComponents();
        for (Component jPanel : pane) {
            pan.add((JPanel) jPanel);
        }
        String codegen = "";
        for (JPanel jPa : pan) {
            if (jPa instanceof Abstractpanel) {
                codegen += "from abc import ABC, abstracmethod\n\n";
            }
        }
        for (JPanel Pa : pan) {
            if (Pa instanceof mypanel) {
                String atri = ((mypanel) Pa).getTxt().getText();
                String[] atrib = atri.split("\n");

                String meth = ((mypanel) Pa).getTxt2().getText();
                String[] met = meth.split("\n");

                codegen += "class " + ((mypanel) Pa).getNAME() + ":";
                codegen += "\n\tdef __init__ (self";

                for (String string : atrib) {
                    codegen += ", " + string;
                }
                codegen += "):\n";
                for (String str : atrib) {
                    codegen += "\t\tself." + str + " =" + str + "\n";
                }
                codegen += "\n\n";
                for (String st : met) {
                    codegen += "\tdef" + st + " (self):\n";
                    codegen += "\t\tpass";
                    codegen += "\n\n";
                }
                codegen += "\n";
            }
            if (Pa instanceof panelHerencia) {
                JPanel jpan = ((panelHerencia) Pa).getPadre();
                if (jpan instanceof mypanel) {
                    codegen += "class " + ((panelHerencia) Pa).getNAME() + " (" + ((mypanel) jpan).getNAME() + "):\n";

                    String atribPapa = ((mypanel) jpan).getTxt2().getText();
                    String[] atribsep = atribPapa.split("\n");

                    codegen += "\tdef__init__(self";

                    String atribprop = ((panelHerencia) Pa).getTxt2().getText();
                    String[] atribP = atribprop.split("\n");

                    for (String st : atribsep) {
                        codegen += ", " + st;
                    }
                    for (String str : atribP) {
                        codegen += ", " + str;
                    }

                    codegen += "):\n";

                    codegen += "\t\tsuper().__init__(";

                    for (int i = 0; i < atribsep.length; i++) {
                        if (i == 0) {
                            codegen += atribsep[i];
                        } else {
                            codegen += ", " + atribsep[i];
                        }
                    }

                    codegen += "):\n";
                    for (String at : atribP) {
                        codegen += "\t\tself." + at + " = " + at + "\n";
                    }
                    codegen += "\n\n";

                    String meth = ((panelHerencia) Pa).getTxt().getText();
                    String[] met = meth.split("\n");

                    for (String me : met) {
                        codegen += "\tdef " + me + " (self):\n";
                        codegen += "\t\tpass";
                        codegen += "\n\n";
                    }

                    codegen += "\n";

                } else if (jpan instanceof Abstractpanel) {
                    codegen += "class " + ((panelHerencia) Pa).getNAME() + " (" + ((Abstractpanel) jpan).getNAME() + "):\n";

                    codegen += "\tdef __init__ (self";

                    String atrib = ((panelHerencia) Pa).getTxt2().getText();
                    String[] atribsep = atrib.split("\n");
                    for (String st : atribsep) {
                        codegen += ", " + st;
                    }
                    codegen += "):\n";

                    for (String at : atribsep) {
                        codegen += "\t\tself." + at + " = " + at + "\n";
                    }
                    codegen += "\n\n";

                    String metP = ((Abstractpanel) jpan).getTxt().getText();
                    String[] methPa = metP.split("\n");

                    for (String string : methPa) {
                        codegen += "\tdef " + string + " (self):\n";
                        codegen += "\t\tpass";
                        codegen += "\n\n";
                    }

                    String met = ((panelHerencia) Pa).getTxt().getText();
                    String[] meth = met.split("\n");
                    for (String string : meth) {
                        codegen += "\tdef " + string + " (self):\n";
                        codegen += "\t\tpass";
                        codegen += "\n\n";
                    }

                    codegen += "\n";

                } else if (jpan instanceof Interfaz) {
                    codegen += "class " + ((panelHerencia) Pa).getNAME() + " (" + ((Interfaz) jpan).getNAME() + "):\n";

                } else if (jpan instanceof panelHerencia) {
                    codegen += ((panelHerencia) Pa).getNAME() + " (" + ((panelHerencia) jpan).getNAME() + "):\n";

                    codegen += "\tdef __init__ (self";

                    String atribPad = ((panelHerencia) jpan).getTxt2().getText();
                    String[] AtribPa = atribPad.split("\n");

                    String atrinprop = ((panelHerencia) Pa).getTxt2().getText();
                    String[] atribprop = atrinprop.split("\n");

                    for (String str : AtribPa) {
                        codegen += ", " + str;
                    }
                    for (String st : atribprop) {
                        codegen += ", " + st;
                    }
                    codegen += "):\n";

                    codegen += "\t\tsuper().__init__(";

                    for (int i = 0; i < AtribPa.length; i++) {
                        if (i == 0) {
                            codegen += AtribPa[i];
                        } else {
                            codegen += ", " + AtribPa[i];
                        }
                    }

                    codegen += "):\n";

                    for (String atr : atribprop) {
                        codegen += "\t\tself." + atr + " = " + atr + "\n";
                    }
                    codegen = "\n\n";

                    String meth = ((panelHerencia) Pa).getTxt().getText();
                    String[] met = meth.split("\n");

                    for (String st : met) {
                        codegen += "\tdef " + st + " (self):\n";
                        codegen += "\t\tpass";
                        codegen += "\n\n";
                    }

                    codegen += "\n";

                }
                codegen += "\n\n";
            }
            if (Pa instanceof Abstractpanel) {
                codegen += "class " + ((Abstractpanel) Pa).getNAME();
                String meth = ((Abstractpanel) Pa).getTxtA().getText();
                String[] metabs = meth.split("\n");
                for (String me : metabs) {
                    codegen += "\t@abstractmethod\n";
                    codegen += "\tdef " + me + " (self):\n";
                    codegen += "\t\tpass";
                    codegen += "\n\n";
                }
                codegen += "\n";
            }
            if (Pa instanceof Interfaz) {
                codegen += "class " + ((Interfaz) Pa).getNAME();

                String meth = ((Interfaz) Pa).getTxt().getText();
                String[] metab = meth.split("\n");
                for (String me : metab) {
                    codegen += "\t@abstractmethod\n";
                    codegen += "\tdef " + me + " (self):\n";
                    codegen += "\t\tpass";
                    codegen += "\n\n";
                }
                codegen += "\n";
            }
        }
        return codegen;
    }

    //Metodo para Imprimir Paneles
    //Metodo para Imprimir Paneles
    private void PrintRecord(JPanel panel) {

        PrinterJob pj = PrinterJob.getPrinterJob();

        //Ponerle nombre al PrinterJob
        pj.setJobName("Print Record");

        //Hacer el Set Printable
        pj.setPrintable(new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                //Chequea si el size es muy grande
                if (pageIndex > 0) {

                    return Printable.NO_SUCH_PAGE;
                }

                //Hacer las Graficas 2D
                Graphics2D graphics2D = (Graphics2D) graphics;

                //Hacer la "traduccion" de las graficas
                graphics2D.translate(pageFormat.getImageableX() * 2, pageFormat.getImageableY() * 2);

                //Esto es una escala de pagina. No obstante, la default es 0.3, no 0.5.
                graphics2D.scale(0.3, 0.3);

                //Pintamos el panel como graficas
                panel.paint(graphics2D);

                //Retornar si la pagina existe
                return Printable.PAGE_EXISTS;
            }

        });
        //Guardar PrinterDialog como booleano
        boolean Resultadoreturn = pj.printDialog();

        //Revisar si el dialogo se muestra
        if (Resultadoreturn) {

            try {
                //Llamamos al metodo para imprimir
                pj.print();

            } catch (PrinterException printerexc) {
                JOptionPane.showMessageDialog(null, printerexc.getMessage());
            }

        }

    }

    public DatosSimp GenDatosSimp(mypanel X) {
        DatosSimp temp = new DatosSimp(X.getWidth(), X.getHeight(), X.getTxt2().getText(),
                X.getTxt().getText(), X.getNAME(), X.getBackground(), X.getTxt().getFont());
        return temp;
    }

    public DatosAbstrac GenDatosAbs(Abstractpanel X) {
        DatosAbstrac temp = new DatosAbstrac(X.getTxtA().getText(), X.getNAME(), X.getBackground(), X.getTxtA().getFont());
        return temp;
    }

    public DatosHerencia GenDatosHeren(panelHerencia X) {
        String Name = "";
        for (JPanel jP : pan) {
            if (jP instanceof mypanel) {
                Name = ((mypanel) jP).getNAME();
            } else if (jP instanceof Abstractpanel) {
                Name = ((Abstractpanel) jP).getNAME();
            } else if (jP instanceof Interfaz) {
                Name = ((Interfaz) jP).getNAME();
            } else if (jP instanceof panelHerencia) {
                Name = ((panelHerencia) jP).getNAME();
            }
        }
        DatosHerencia temp = new DatosHerencia(X.getTxt2().getText(), X.getTxt().getText(), X.getNAME() + " class", X.getPadre(), X.getBackground(), X.getFont());
        return temp;
    }

    public DatosInter GenDatosInter(Interfaz X) {
        DatosInter temp = new DatosInter(X.getTxt().getText(), X.getNAME() + " Interface", X.getBackground(), X.getTxt().getFont());
        return temp;
    }
    public DatosRombo GenDatosRombo(Rombo X){
        DatosRombo temp= new DatosRombo(X.getText().getText(), X.getColor(), X.getText().getFont());
        return temp;
    }
    public DatosCiclo GenDatosCiclo(circulo X){
        DatosCiclo temp= new DatosCiclo(X.getArea().getText(), X.getColor(), X.getArea().getFont());
        return temp;
    }
    public DatosDat GenDatosDat(Paralelogramo X){
        DatosDat temp= new DatosDat(X.getArea().getText(), X.getColor(), X.getArea().getFont());
        return temp;
    }
    public DatosProcess GenDatosProce(Proceso X){
        DatosProcess temp= new DatosProcess(X.getTxt().getText(), X.getColor(), X.getTxt().getFont());
        return temp;
    }
    public DatosInicio GenDatosInic(InicioFin X){
        DatosInicio temp= new DatosInicio(X.getArea().getText(), X.getColor(), X.getArea().getFont());
        return temp;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    int cont = 0;
    public static ArrayList<JPanel> pan = new ArrayList<>();
    public static ArrayList<FormaGeneral> figs = new ArrayList<>();
    public static ArrayList<Object> Desceri = new ArrayList<>();
    public static JPopupMenu pop = new JPopupMenu();
    JMenuItem op2 = new JMenuItem("Agregar al generador");

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bt_setfont;
    private javax.swing.JDialog JD_Codigo;
    private javax.swing.JDialog JD_DdF;
    private javax.swing.JDialog JD_UML;
    private javax.swing.JDialog JD_herencia;
    private javax.swing.JTextArea MostarCodigo;
    private javax.swing.JPanel Pn_DdF;
    private javax.swing.JPanel Pn_UML;
    private javax.swing.JButton bt_cambiarfont;
    private javax.swing.JComboBox<String> cb_Style;
    private javax.swing.JComboBox<String> cb_font;
    private javax.swing.JComboBox<String> cb_font2;
    private javax.swing.JComboBox<String> cb_padre;
    private javax.swing.JComboBox<String> cb_style;
    private javax.swing.JComboBox<String> cb_tamaño;
    private javax.swing.JComboBox<String> cb_tamaño1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel jlb_ciclo;
    private javax.swing.JLabel jlb_datos;
    private javax.swing.JLabel jlb_desicion;
    private javax.swing.JLabel jlb_desicion1;
    private javax.swing.JPanel jpn_UML;
    private javax.swing.JPanel jpn_diagrama;
    private javax.swing.JLabel lb_GenerarCode;
    private javax.swing.JLabel lb_GenerarFlujo;
    private javax.swing.JLabel lb_Heredar;
    private javax.swing.JLabel lb_UML;
    private javax.swing.JLabel lb_creardiag;
    private javax.swing.JLabel lb_creardiag1;
    private javax.swing.JLabel lb_crearuml;
    private javax.swing.JLabel lb_crearuml1;
    private javax.swing.JLabel lb_proceso;
    private javax.swing.JLabel lb_salir;
    private javax.swing.JLabel lb_tenerHija;
    private javax.swing.JPanel pn_crearHija;
    private javax.swing.JPanel pn_creardiag;
    private javax.swing.JPanel pn_creardiag1;
    private javax.swing.JPanel pn_crearuml;
    private javax.swing.JPanel pn_crearuml1;
    private javax.swing.JPanel pn_salir;
    private javax.swing.JTextField tf_nomhijo;
    // End of variables declaration//GEN-END:variables
}
